on:
    pull_request:
    push:
        branches: master

name: Continuous Integration

jobs:
    cargo_fmt:
        name: Cargo Format
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Install stable toolchain
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable
                  override: true
                  components: rustfmt

            - name: Run cargo fmt
              working-directory: ./src-tauri
              run: cargo fmt --all -- --check

    clippy:
        name: Cargo Clippy
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - name: Install stable toolchain
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable
                  override: true
                  components: clippy

            - name: Prepare env and install dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
                  mkdir build
                  echo "${{ secrets.ENV_FILE }}" > .env

            - name: Run cargo clippy
              working-directory: ./src-tauri
              run: cargo clippy --all-targets --all-features

    eslint_prettier_stylelint:
        name: ESLint, Prettier and Stylelint
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Setup node
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: Check node_modules cache
              id: node_module_cache
              uses: actions/cache@v3
              with:
                  path: node_modules
                  key: node_modules-${{hashFiles('package-lock.json')}}
                  restore-keys: node_modules

            - name: Install frontend dependencies
              if: steps.node_module_cache.outputs.cache-hit != 'true'
              run: npm install

            - name: Run ESLint
              run: npm run eslint:check

            - name: Run Prettier
              run: npm run prettier:check

            - name: Run Stylelint
              run: npm run stylelint:check
