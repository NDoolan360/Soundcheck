name: Continuous Integration

on:
    workflow_dispatch:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
            - dev

jobs:
    node:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Setup Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: 18

            - name: Cache Node modules
              uses: actions/cache@v2
              with:
                  path: node_modules
                  key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: npm-${{ runner.os }}-

            - run: npm ci
            - run: npm run eslint:check
            - run: npm run prettier:check
            - run: npm run stylelint:check
            - run: npm run test

    rust:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Setup Rust
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable

            - name: Cache Rust crates
              uses: actions/cache@v2
              with:
                  path: |
                      ~/.cargo
                      ./src-tauri/target
                  key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: cargo-${{ runner.os }}-

            - name: Set up Tauri env
              run: |
                  mkdir build
                  echo "${{ secrets.ENV_FILE }}" > .env
                  sudo apt-get update
                  sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

            - run: cd src-tauri && cargo fmt --all -- --check
            - run: cd src-tauri && cargo clippy --all-targets --all-features
            - run: cd src-tauri && cargo test --all-targets --all-features
